{
	"debug": false,
	"isHeadless": true,
	"scrollToBottom": true,
	"proxies": [],
	"waitUntill": "domcontentloaded",
	"blockResourceTypes": ["image", "media", "font", "other"],
	"whiteListUrls": ["https://shop.mango.com", "mngbcn.com"],
	"blockUrls": [],
	"container": "//main[@class='product-detail']",
	"title": {
		"selectors": ["div.product-features > h1.product-name[itemprop]"],
		"attribute": "",
		"regex": "",
		"groups": [],
		"valueToReplace": [
			{
				"value": "",
				"replaceWith": ""
			}
		]
	},
	"descriptions": {
		"selectors": ["p.product-info-text"],
		"attribute": "",
		"regex": "",
		"groups": [],
		"valueToReplace": [
			{
				"value": "",
				"replaceWith": ""
			}
		]
	},
	"vendor": {
		"name": "Mango",
		"selectors": [],
		"attribute": "",
		"regex": "",
		"groups": [],
		"valueToReplace": [
			{
				"value": "",
				"replaceWith": ""
			}
		]
	},
	"category": {
		"selectors": ["//ol[@class='breadcrumbs']/li[last()-1]/a/span | //ol[@class='breadcrumbs']/li[last()]/a/span"],
		"attribute": "",
		"regex": "",
		"groups": [],
		"valueToReplace": [
			{
				"value": "",
				"replaceWith": ""
			}
		]
	},
	"price": {
		"selectors": [
			"//div[@class='product-features-prices']/span/div/span[@data-testid='currentPrice']/span/span",
			"//div[@class='product-features-prices']/div/div/span[@data-testid='currentPrice']/span/span"
		],
		"attribute": "",
		"regex": "",
		"groups": [],
		"valueToReplace": [
			{
				"value": "",
				"replaceWith": ""
			}
		]
	},
	"sku": {
		"selectors": ["span.product-reference"],
		"attribute": "",
		"regex": "",
		"groups": [],
		"valueToReplace": [
			{
				"value": "",
				"replaceWith": ""
			}
		]
	},
	"quantity": {
		"selectors": [],
		"attribute": "",
		"regex": "",
		"groups": [],
		"valueToReplace": [
			{
				"value": "",
				"replaceWith": ""
			}
		]
	},
	"OutOfStockSTDIndicator": {
		"selectors": ["div.sizes > span:not([class*='not-avaliable']):not([class*='size-unavailable'])"]
	},
	"option1": {
		"option1Name": "size",
		"selectors": [
			"div.selector-list > span:not(.size-unavailable), div#sizesContainer > div > span[data-available='true']",
			"div#sizesContainer > div > * > * > button > span[data-available='true']",
			"div#sizesContainer > div > * > *[data-available='true']"
		],
		"attribute": "",
		"regex": "",
		"groups": [],
		"valueToReplace": [
			{
				"value": "",
				"replaceWith": ""
			}
		]
	},
	"clickOption1": {
		"selector": "",
		"delayTime": ""
	},
	"option2": {
		"option2Name": "color",
		"selectors": [
			"div.product-colors > #colorsContainer > .color-container--selected > img:nth-child(1):not(.color-image--cross-out)",
			"div.product-colors > #colorsContainer > :not(.color-container--selected) > img:nth-child(1):not(.color-image--cross-out)"
		],
		"attribute": "alt",
		"regex": "",
		"groups": [],
		"valueToReplace": [
			{
				"value": "seÃ§ilen",
				"replaceWith": ""
			}
		]
	},
	"clickOption2": {
		"selector": "div.product-colors > #colorsContainer > .color-container[id='{{valueToReplace}}']",
		"delayTime": ""
	},
	"option2Id": {
		"selectors": [
			"//div[@id='colorsContainer']/*[contains(@class,'color-container--selected')]/img[1][not(contains(@class,'color-image--cross-out'))]/parent::*",
			"//div[@id='colorsContainer']/*[not(contains(@class,'color-container--selected'))]/img[1][not(contains(@class,'color-image--cross-out'))]/parent::*"
		],
		"attribute": "id",
		"regex": "",
		"groups": [],
		"valueToReplace": [
			{
				"value": "",
				"replaceWith": ""
			}
		]
	},
	"option3": {
		"option3Name": "",
		"selectors": [],
		"attribute": "",
		"regex": "",
		"groups": [],
		"valueToReplace": [
			{
				"value": "",
				"replaceWith": ""
			}
		]
	},
	"clickOption3": {
		"selector": "",
		"delayTime": ""
	},
	"option3Id": {
		"selectors": [],
		"attribute": "",
		"regex": "",
		"groups": [],
		"valueToReplace": [
			{
				"value": "",
				"replaceWith": ""
			}
		]
	},
	"imageSrc": {
		"selectors": ["img.zoom-thumbnail[alt]"],
		"attribute": "src",
		"regex": "",
		"groups": [],
		"valueToReplace": [
			{
				"value": "",
				"replaceWith": ""
			}
		]
	},
	"clickImage": {
		"selector": "//*[@class='image-btn']",
		"delayTime": ""
	}
}
